package com.lyledenman.gadago;

import com.codename1.io.Log;
import com.codename1.location.Location;
import com.codename1.location.LocationManager;
import com.codename1.ui.*;
import com.codename1.ui.animations.CommonTransitions;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.Dialog;
import com.codename1.ui.layouts.FlowLayout;
import com.codename1.ui.layouts.LayeredLayout;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.ui.util.UITimer;
import sun.security.util.Password;

import java.io.IOException;


/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class GADAGo {

    private Form current;
    private Resources theme;

    private boolean userLoggedIn;
    private boolean isUserLoggedIn() {
        // STUB
        return false;
    }

    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        // Log.bindCrashProtection(true);

        // Check if user is already logged in
        userLoggedIn = isUserLoggedIn();
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }

        if (userLoggedIn) {
            Form hi = new Form("GADA Go", new BorderLayout(BorderLayout.CENTER_BEHAVIOR_CENTER_ABSOLUTE));
            Form login = new Form("Login");
            final Label apple = new Label(theme.getImage("apple-icon.png"));
            final Label android = new Label(theme.getImage("android-icon.png"));
            final Label windows = new Label(theme.getImage("windows-icon.png"));
            Location position = LocationManager.getLocationManager().getCurrentLocationSync();
//        System.out.printf("Position: %s", position);
            Double lat = position.getLatitude();
            Double lon = position.getLongitude();
            Button getStarted = new Button("Lat: " + lat + " Long: " + lon);
            FontImage.setMaterialIcon(getStarted, FontImage.MATERIAL_LINK);
            getStarted.setUIID("GetStarted");
            hi.addComponent(BorderLayout.CENTER,
                    LayeredLayout.encloseIn(
                            BoxLayout.encloseY(
                                    new Label(theme.getImage("duke-no-logos.png")),
                                    getStarted
                            ),
                            FlowLayout.encloseRightMiddle(apple)
                    )
            );

            getStarted.addActionListener((e) -> {
                //Display.getInstance().execute("https://www.codenameone.com/developers.html");
            });

            new UITimer(() -> {
                if(apple.getParent() != null) {
                    apple.getParent().replace(apple, android, CommonTransitions.createFade(500));
                } else {
                    if(android.getParent() != null) {
                        android.getParent().replace(android, windows, CommonTransitions.createFade(500));
                    } else {
                        windows.getParent().replace(windows, apple, CommonTransitions.createFade(500));
                    }
                }
            }).schedule(2200, true, hi);
            hi.show();
        } else {
            // Login Form
            // Shown if user is not logged in
            Form login = new Form("Welcome to GADA Go");

            // Create username and password fields and add to the login form
            TextField loginUsername = new TextField();
            loginUsername.setHint("Enter your e-mail or username");
            login.addComponent(loginUsername);
            TextField loginPassword = new TextField();
            loginPassword.setHint("Enter your password");
            login.addComponent(loginPassword);

            // Create log in validation button and add to the login form
            Button loginValidateUser = new Button("Login");
            loginValidateUser.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent evt) {
                    if (!loginUsername.getText().equals("") && !loginPassword.getText().equals("")) {
                        Dialog.show("Validating user login...", "At this point, the system will validate the username / password combination.", "Ok", "Cancel" );
                        System.out.println("Login clicked");
                        System.out.printf("Username provided: %s%n", loginUsername.getText());
                        System.out.printf("Password provided: %s%n", loginPassword.getText());
                        if (loginUsername.getText().equals("admin") && loginPassword.getText().equals("admin1")) {
                            userLoggedIn = true;
                            Dialog.show("VALID USER FOUND", "At this point, the system has found the username:password pair provided. The app will now go to the main form.", "Ok", "Cancel" );
                        } else {
                            loginUsername.setText("");
                            loginPassword.setText("");
                            Dialog.show("INVALID USER", "At this point, the system has not found the username:password pair provided.", "Ok", "Cancel" );
                        }

                        // If the user is validated, run start() again
                        if (userLoggedIn) {
                            start();
                        }
                    }
                }
            });
            login.addComponent(loginValidateUser);

            // Create sign up button and add to the login form
            Button signup = new Button("New user? Sign up.");
            signup.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent evt) {
                    // Signup Form
                    // Shown if user clicks the SignUp button
                    Form signup = new Form("Sign up for GADA Go");

                    // Provide navigation back to the login form
                    setBackCommand(signup, login);

                    // Create email, password, and username fields and add them to the signup form
                    TextField signupEmail = new TextField();
                    signupEmail.setHint("Enter your e-mail");
                    signup.addComponent(signupEmail);

                    TextField signupPwd = new TextField();
                    signupPwd.setHint("Enter your password");
                    signup.addComponent(signupPwd);

                    TextField signupPwdValidation = new TextField();
                    signupPwdValidation.setHint("Verify your password");
                    signup.addComponent(signupPwdValidation);

                    TextField signupUsername = new TextField();
                    signupUsername.setHint("Enter your desired username");
                    signup.addComponent(signupUsername);

                    // Create new user validation button and add it to the signup form
                    Button signupUserValidation = new Button("Enter information");
                    signupUserValidation.addActionListener(new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent evt) {
                            Dialog.show("Validating new user...", "At this point, the system will validate the new user information.", "Ok", "Cancel" );
                            System.out.println("Sign up enter info clicked");
                        }
                    });
                    signup.addComponent(signupUserValidation);

                    // Show the signup form
                    signup.show();
                }
            });
            login.addComponent(signup);


            // Show the login form in the app
            login.show();
        }

    }

    protected void setBackCommand(Form from, Form to) {
        Command back = new Command("") {

            @Override
            public void actionPerformed(ActionEvent evt) {
                to.showBack();
            }

        };
        Image img = FontImage.createMaterial(FontImage.MATERIAL_ARROW_BACK, UIManager.getInstance().getComponentStyle("TitleCommand"));
        back.setIcon(img);
        from.getToolbar().addCommandToLeftBar(back);
        from.getToolbar().setTitleCentered(true);
        from.setBackCommand(back);
    }

    public void stop() {
        current = Display.getInstance().getCurrent();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }
    
    public void destroy() {
    }

}
